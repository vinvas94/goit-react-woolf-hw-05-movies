{"version":3,"file":"static/js/33.5f0ab179.chunk.js","mappings":"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","sources":["api/Api.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '996e01a07f47e64fc2cf01d8ba7bce2b';\n\nexport const getMoveTrending = async () => {\n  try {\n    const fetchLink = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return fetchLink;\n  } catch (error) {\n    Notify.error('Error fetching trending movies:', error.message);\n    return { error: error.message };\n  }\n};\n\nexport const getMoveName = async searchQuery => {\n  try {\n    const fetchLink = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n    );\n    return fetchLink;\n  } catch (error) {\n    Notify.error('Error fetching trending movies:', error.message);\n    return { error: error.message };\n  }\n};\n\nexport const getMoveDetails = async movieId => {\n  try {\n    const fetchLink = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return fetchLink;\n  } catch (error) {\n    Notify.error('Error fetching trending movies:', error.message);\n    return { error: error.message };\n  }\n};\n\nexport const getMoveCredits = async movieId => {\n  try {\n    const fetchLink = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return fetchLink;\n  } catch (error) {\n    Notify.error('Error fetching trending movies:', error.message);\n    return { error: error.message };\n  }\n};\n\nexport const getMoveReviews = async movieId => {\n  try {\n    const fetchLink = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return fetchLink;\n  } catch (error) {\n    Notify.error('Error fetching trending movies:', error.message);\n    return { error: error.message };\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled(Link)`\n  display: inline-block;\n  border: 1px solid #007bff;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 20px;\n  text-decoration: none;\n  color: #343a40;\n  &:hover {\n    background-color: #007bff;\n    color: #fff;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n`;\n\nexport const Image = styled.img`\n  display: flex;\n`;\n\nexport const InfoList = styled.ul`\n  list-style: none;\n`;\n\nexport const InfoItem = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0px;\n  height: auto;\n`;\n\nexport const InfoTitle = styled.h1`\n  font-size: 35px;\n  color: #343a40;\n  margin: 0;\n`;\n\nexport const ListAdd = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n`;\n\nexport const ItemAdd = styled.li`\n  margin-right: 20px;\n`;\n\nexport const LinkAdd = styled(Link)`\n  text-decoration: none;\n  display: inline-block;\n  border: 1px solid #007bff;\n  padding: 10px;\n  border-radius: 5px;\n  width: 80px;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n  color: #007bff;\n  &:hover {\n    background-color: #007bff;\n    color: #fff;\n  }\n`;\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMoveDetails } from '../../api/Api';\nimport DefaultImg from '../../img/imageNotFound.jpg';\nimport { Notify } from 'notiflix';\nimport {\n  Button,\n  Content,\n  InfoList,\n  InfoItem,\n  InfoTitle,\n  Image,\n  ListAdd,\n  ItemAdd,\n  LinkAdd,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [moveInfo, setMoveDetails] = useState([]);\n\n  const location = useLocation();\n  const buttonBack = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const infoMoves = async () => {\n      try {\n        const data = await getMoveDetails(movieId);\n        const newMov = data.data;\n        setMoveDetails(newMov);\n      } catch (error) {\n        Notify.error('An error occurred while fetching movie details.');\n      }\n    };\n    infoMoves();\n  }, [movieId]);\n\n  const { poster_path, title, vote_average, genres, overview } = moveInfo;\n\n  return (\n    <>\n      <Button to={buttonBack.current}>Back to collection</Button>\n      <Content>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : DefaultImg\n          }\n          alt={title}\n          width=\"500\"\n          height=\"500\"\n        />\n        <InfoList>\n          <InfoItem>\n            <InfoTitle>{title}</InfoTitle>\n            <p>Users Score: {(vote_average * 10).toFixed(0)}%</p>\n          </InfoItem>\n          <InfoItem>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n          </InfoItem>\n          <InfoItem>\n            <h2>Genres</h2>\n            {genres && (\n              <ul>\n                {genres.map((genre, index) => (\n                  <li key={index}>{genre.name}</li>\n                ))}\n              </ul>\n            )}\n          </InfoItem>\n          <hr />\n          <h3>Additional information</h3>\n          <ListAdd>\n            <ItemAdd>\n              <LinkAdd to=\"cast\">Cast</LinkAdd>\n            </ItemAdd>\n            <ItemAdd>\n              <LinkAdd to=\"reviews\">Reviews</LinkAdd>\n            </ItemAdd>\n          </ListAdd>\n        </InfoList>\n      </Content>\n      <hr />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getMoveTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","fetchLink","_context","prev","next","axios","concat","sent","abrupt","t0","Notify","message","error","stop","apply","arguments","getMoveName","_ref2","_callee2","searchQuery","_context2","_x","getMoveDetails","_ref3","_callee3","movieId","_context3","_x2","getMoveCredits","_ref4","_callee4","_context4","_x3","getMoveReviews","_ref5","_callee5","_context5","_x4","Button","styled","Link","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","Image","_templateObject3","InfoList","_templateObject4","InfoItem","_templateObject5","InfoTitle","_templateObject6","ListAdd","_templateObject7","ItemAdd","_templateObject8","LinkAdd","_templateObject9","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","moveInfo","setMoveDetails","location","useLocation","buttonBack","useRef","state","from","useEffect","infoMoves","data","newMov","poster_path","title","vote_average","genres","overview","_jsxs","_Fragment","children","_jsx","to","current","src","DefaultImg","alt","width","height","toFixed","map","genre","index","name","Suspense","fallback","Outlet"],"sourceRoot":""}